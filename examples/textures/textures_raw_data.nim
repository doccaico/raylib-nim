import raylib

const
  screenWidth = 800
  screenHeight = 450

InitWindow(screenWidth, screenHeight, "raylib [textures] example - texture from raw data")

var
  fudesumiRaw = LoadImageRaw("resources/fudesumi.raw", 384, 512, UNCOMPRESSED_R8G8B8A8, 0)
  fudesumi = LoadTextureFromImage(fudesumiRaw)
  width = 960.cint
  height = 480.cint
  pixels = cast[ptr Color](alloc(width*height*Color.sizeof))

UnloadImage(fudesumiRaw)

for y in 0..<height:
  for x in 0..<width:
    let byteAddr = cast[ByteAddress](pixels) +% (y*width + x) * sizeof(pixels[])
    if (((x/32).int+(y/32).int)/1).int mod 2 == 0:
      cast[ptr Color](byteAddr)[] = ORANGE
    else:
      cast[ptr Color](byteAddr)[] = GOLD

var
  checkedIm = LoadImageEx(pixels, width, height)
  checked = LoadTextureFromImage(checkedIm)

UnloadImage(checkedIm)
dealloc(pixels)

while not WindowShouldClose():
  BeginDrawing()
  ClearBackground(RAYWHITE)
  DrawTexture(checked, (screenWidth/2 - checked.width/2).cint,
      (screenHeight/2 - checked.height/2).cint, Fade(WHITE, 0.5))
  DrawTexture(fudesumi, 430, -30, WHITE)
  DrawText("CHECKED TEXTURE ", 84, 85, 30, BROWN)
  DrawText("GENERATED by CODE", 72, 148, 30, BROWN)
  DrawText("and RAW IMAGE LOADING", 46, 210, 30, BROWN)
  DrawText("(c) Fudesumi sprite by Eiden Marsal", 310, screenHeight - 20, 10, BROWN)
  EndDrawing()

UnloadTexture(fudesumi)
UnloadTexture(checked)
CloseWindow()
